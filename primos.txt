     
	.data
		.equ UART0, 0x860     
	        
vetorprimos: .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

		.global main
		.text
main: 

num1:		movia r15, UART0
		call nr_uart_rxchar
		blt r2, r0, num1
		
		mov r6, r2
		movia r16, 46	
		subi r6, r6, 48
		
num2:		movia r15, UART0
		call nr_uart_rxchar
	        blt r2, r0, num2

	      
append:       mov r7, r2
	      muli r6, r6, 10
	      subi r7, r7, 48
	      add r6, r6, r7
	      
      mov r8, r6
      movia r9, vetorprimos
      movi r4, 0
      movi r5, 1
      mov r1, r0
      movi r2, 2
	
outerfor: beq  r1, r2, primo
	   mov r1, r0
          addi r4, r4, 1
	  movi r5, 1        
	  bgeu r8, r4, innerfor
	  call exit

innerfor:  
	  div r3, r4, r5
          mul r3, r3, r5
          addi r5, r5, 1
	  beq r3, r4, divisivel     
	  bgeu r4, r5, innerfor
	  call outerfor
	  
divisivel: addi r1, r1, 1  
	   call innerfor
	   
primo: stw r4, 0(r9)
       addi r9, r9, 4
       mov r1, r0
       call outerfor
       
exit: ldw r2, 0(r9)
      ldw r3, 4(r9)
      ldw r4, 8(r9)      
	      
	       




		
		
		
